[
    {
        "type": "HTTP",
        "name": "Get Users",
        "description": "Get Users",
        "headers": {
            "Content-Type": "application/json",
            "Content-Length": "2124",
            "Server": "Werkzeug/1.0.1 Python/3.7.0",
            "Date": "Wed, 20 May 2020 17:25:06 GMT"
        },
        "body": "[\n  {\n    \"email\": \"pippo@baudo.it\", \n    \"id\": 1, \n    \"name\": \"pippo\", \n    \"surname\": \"baudo\", \n    \"username\": \"mannaggia\"\n  }, \n  {\n    \"email\": \"marco@bartali.it\", \n    \"id\": 2, \n    \"name\": \"marco\", \n    \"surname\": \"bartali\", \n    \"username\": \"marco\"\n  }, \n  {\n    \"email\": \"gino@bartali.it\", \n    \"id\": 3, \n    \"name\": \"gino\", \n    \"surname\": \"bartali\", \n    \"username\": \"gino\"\n  }, \n  {\n    \"email\": \"gino@barta.it\", \n    \"id\": 4, \n    \"name\": \"ginuccia\", \n    \"surname\": \"bartalosa\", \n    \"username\": \"ginella\"\n  }, \n  {\n    \"email\": \"another@utente.it\", \n    \"id\": 5, \n    \"name\": \"uno\", \n    \"surname\": \"utente\", \n    \"username\": \"another\"\n  }, \n  {\n    \"email\": \"another@utente.it\", \n    \"id\": 6, \n    \"name\": \"uno\", \n    \"surname\": \"utente\", \n    \"username\": \"another\"\n  }, \n  {\n    \"email\": \"another@utente.it\", \n    \"id\": 7, \n    \"name\": \"uno\", \n    \"surname\": \"utente\", \n    \"username\": \"another\"\n  }, \n  {\n    \"email\": \"another@utente.it\", \n    \"id\": 8, \n    \"name\": \"uno\", \n    \"surname\": \"utente\", \n    \"username\": \"another\"\n  }, \n  {\n    \"email\": \"another@utente.it\", \n    \"id\": 9, \n    \"name\": \"due\", \n    \"surname\": \"utentazzo\", \n    \"username\": \"another\"\n  }, \n  {\n    \"email\": \"another@utente.it\", \n    \"id\": 10, \n    \"name\": \"due\", \n    \"surname\": \"utentazzo\", \n    \"username\": \"another\"\n  }, \n  {\n    \"email\": \"another@utente.it\", \n    \"id\": 11, \n    \"name\": \"due\", \n    \"surname\": \"utentazzo\", \n    \"username\": \"another\"\n  }, \n  {\n    \"email\": \"another@utente.it\", \n    \"id\": 12, \n    \"name\": \"uno\", \n    \"surname\": \"utente\", \n    \"username\": \"another\"\n  }, \n  {\n    \"email\": \"another@utente.it\", \n    \"id\": 13, \n    \"name\": \"due\", \n    \"surname\": \"utentazzo\", \n    \"username\": \"another\"\n  }, \n  {\n    \"email\": \"another@utente.it\", \n    \"id\": 14, \n    \"name\": \"due\", \n    \"surname\": \"utentazzo\", \n    \"username\": \"another\"\n  }, \n  {\n    \"email\": \"another@utente.it\", \n    \"id\": 15, \n    \"name\": \"due\", \n    \"surname\": \"utentazzo\", \n    \"username\": \"another\"\n  }, \n  {\n    \"email\": \"another@utente.it\", \n    \"id\": 16, \n    \"name\": \"uno\", \n    \"surname\": \"utente\", \n    \"username\": \"another\"\n  }\n]\n",
        "status": 200,
        "request": {
            "body": null,
            "headers": {
                "User-Agent": "python-requests/2.23.0",
                "Accept-Encoding": "gzip, deflate",
                "Accept": "*/*",
                "Connection": "keep-alive"
            },
            "method": "GET",
            "url": "http://localhost:5000/users"
        },
        "json": [
            {
                "email": "pippo@baudo.it",
                "id": 1,
                "name": "pippo",
                "surname": "baudo",
                "username": "mannaggia"
            },
            {
                "email": "marco@bartali.it",
                "id": 2,
                "name": "marco",
                "surname": "bartali",
                "username": "marco"
            },
            {
                "email": "gino@bartali.it",
                "id": 3,
                "name": "gino",
                "surname": "bartali",
                "username": "gino"
            },
            {
                "email": "gino@barta.it",
                "id": 4,
                "name": "ginuccia",
                "surname": "bartalosa",
                "username": "ginella"
            },
            {
                "email": "another@utente.it",
                "id": 5,
                "name": "uno",
                "surname": "utente",
                "username": "another"
            },
            {
                "email": "another@utente.it",
                "id": 6,
                "name": "uno",
                "surname": "utente",
                "username": "another"
            },
            {
                "email": "another@utente.it",
                "id": 7,
                "name": "uno",
                "surname": "utente",
                "username": "another"
            },
            {
                "email": "another@utente.it",
                "id": 8,
                "name": "uno",
                "surname": "utente",
                "username": "another"
            },
            {
                "email": "another@utente.it",
                "id": 9,
                "name": "due",
                "surname": "utentazzo",
                "username": "another"
            },
            {
                "email": "another@utente.it",
                "id": 10,
                "name": "due",
                "surname": "utentazzo",
                "username": "another"
            },
            {
                "email": "another@utente.it",
                "id": 11,
                "name": "due",
                "surname": "utentazzo",
                "username": "another"
            },
            {
                "email": "another@utente.it",
                "id": 12,
                "name": "uno",
                "surname": "utente",
                "username": "another"
            },
            {
                "email": "another@utente.it",
                "id": 13,
                "name": "due",
                "surname": "utentazzo",
                "username": "another"
            },
            {
                "email": "another@utente.it",
                "id": 14,
                "name": "due",
                "surname": "utentazzo",
                "username": "another"
            },
            {
                "email": "another@utente.it",
                "id": 15,
                "name": "due",
                "surname": "utentazzo",
                "username": "another"
            },
            {
                "email": "another@utente.it",
                "id": 16,
                "name": "uno",
                "surname": "utente",
                "username": "another"
            }
        ]
    },
    {
        "type": "HTTP",
        "name": "Get User by ID",
        "description": "Get User by ID",
        "headers": {
            "Content-Type": "application/json",
            "Content-Length": "115",
            "Server": "Werkzeug/1.0.1 Python/3.7.0",
            "Date": "Wed, 20 May 2020 17:25:08 GMT"
        },
        "body": "{\n  \"email\": \"marco@bartali.it\", \n  \"id\": 2, \n  \"name\": \"marco\", \n  \"surname\": \"bartali\", \n  \"username\": \"marco\"\n}\n",
        "status": 200,
        "request": {
            "body": null,
            "headers": {
                "User-Agent": "python-requests/2.23.0",
                "Accept-Encoding": "gzip, deflate",
                "Accept": "*/*",
                "Connection": "keep-alive"
            },
            "method": "GET",
            "url": "http://localhost:5000/users/2"
        },
        "json": {
            "email": "marco@bartali.it",
            "id": 2,
            "name": "marco",
            "surname": "bartali",
            "username": "marco"
        }
    },
    {
        "type": "HTTP",
        "name": "Add a New User",
        "description": "Add a New User",
        "headers": {
            "Content-Type": "application/json",
            "Content-Length": "116",
            "Server": "Werkzeug/1.0.1 Python/3.7.0",
            "Date": "Wed, 20 May 2020 17:25:10 GMT"
        },
        "body": "{\n  \"email\": \"another@utente.it\", \n  \"id\": 17, \n  \"name\": \"uno\", \n  \"surname\": \"utente\", \n  \"username\": \"another\"\n}\n",
        "status": 201,
        "request": {
            "body": {
                "username": "another",
                "name": "uno",
                "surname": "utente",
                "email": "another@utente.it"
            },
            "headers": {
                "User-Agent": "python-requests/2.23.0",
                "Accept-Encoding": "gzip, deflate",
                "Accept": "*/*",
                "Connection": "keep-alive",
                "Content-Length": "89",
                "Content-Type": "application/json"
            },
            "method": "POST",
            "url": "http://localhost:5000/users"
        },
        "json": {
            "email": "another@utente.it",
            "id": 17,
            "name": "uno",
            "surname": "utente",
            "username": "another"
        }
    },
    {
        "type": "HTTP",
        "name": "Get the New User",
        "description": "Get the New User",
        "headers": {
            "Content-Type": "application/json",
            "Content-Length": "116",
            "Server": "Werkzeug/1.0.1 Python/3.7.0",
            "Date": "Wed, 20 May 2020 17:25:12 GMT"
        },
        "body": "{\n  \"email\": \"another@utente.it\", \n  \"id\": 17, \n  \"name\": \"uno\", \n  \"surname\": \"utente\", \n  \"username\": \"another\"\n}\n",
        "status": 200,
        "request": {
            "body": null,
            "headers": {
                "User-Agent": "python-requests/2.23.0",
                "Accept-Encoding": "gzip, deflate",
                "Accept": "*/*",
                "Connection": "keep-alive"
            },
            "method": "GET",
            "url": "http://localhost:5000/users/17"
        },
        "json": {
            "email": "another@utente.it",
            "id": 17,
            "name": "uno",
            "surname": "utente",
            "username": "another"
        }
    },
    {
        "type": "HTTP",
        "name": "Edit the new user",
        "description": "Edit the new user",
        "headers": {
            "Content-Type": "application/json",
            "Content-Length": "123",
            "Server": "Werkzeug/1.0.1 Python/3.7.0",
            "Date": "Wed, 20 May 2020 17:25:14 GMT"
        },
        "body": "{\n  \"email\": \"another@utente.it\", \n  \"id\": 17, \n  \"name\": \"due\", \n  \"surname\": \"crazy surname\", \n  \"username\": \"another\"\n}\n",
        "status": 200,
        "request": {
            "body": {
                "name": "due",
                "surname": "crazy surname"
            },
            "headers": {
                "User-Agent": "python-requests/2.23.0",
                "Accept-Encoding": "gzip, deflate",
                "Accept": "*/*",
                "Connection": "keep-alive",
                "Content-Length": "43",
                "Content-Type": "application/json"
            },
            "method": "PATCH",
            "url": "http://localhost:5000/users/17"
        },
        "json": {
            "email": "another@utente.it",
            "id": 17,
            "name": "due",
            "surname": "crazy surname",
            "username": "another"
        }
    },
    {
        "type": "HTTP",
        "name": "Get the Updated User",
        "description": "Get the Updated User",
        "headers": {
            "Content-Type": "application/json",
            "Content-Length": "123",
            "Server": "Werkzeug/1.0.1 Python/3.7.0",
            "Date": "Wed, 20 May 2020 17:25:16 GMT"
        },
        "body": "{\n  \"email\": \"another@utente.it\", \n  \"id\": 17, \n  \"name\": \"due\", \n  \"surname\": \"crazy surname\", \n  \"username\": \"another\"\n}\n",
        "status": 200,
        "request": {
            "body": null,
            "headers": {
                "User-Agent": "python-requests/2.23.0",
                "Accept-Encoding": "gzip, deflate",
                "Accept": "*/*",
                "Connection": "keep-alive"
            },
            "method": "GET",
            "url": "http://localhost:5000/users/17"
        },
        "json": {
            "email": "another@utente.it",
            "id": 17,
            "name": "due",
            "surname": "crazy surname",
            "username": "another"
        }
    },
    {
        "type": "HTTP",
        "name": "Delete the new user",
        "description": "Delete the new user",
        "headers": {
            "Content-Type": "application/json",
            "Content-Length": "123",
            "Server": "Werkzeug/1.0.1 Python/3.7.0",
            "Date": "Wed, 20 May 2020 17:25:18 GMT"
        },
        "body": "{\n  \"email\": \"another@utente.it\", \n  \"id\": 17, \n  \"name\": \"due\", \n  \"surname\": \"crazy surname\", \n  \"username\": \"another\"\n}\n",
        "status": 200,
        "request": {
            "body": null,
            "headers": {
                "User-Agent": "python-requests/2.23.0",
                "Accept-Encoding": "gzip, deflate",
                "Accept": "*/*",
                "Connection": "keep-alive",
                "Content-Length": "0"
            },
            "method": "DELETE",
            "url": "http://localhost:5000/users/17"
        },
        "json": {
            "email": "another@utente.it",
            "id": 17,
            "name": "due",
            "surname": "crazy surname",
            "username": "another"
        }
    },
    {
        "type": "HTTP",
        "name": "Get the Deleted user",
        "description": "Get the Deleted user",
        "headers": {
            "Content-Type": "text/html; charset=utf-8",
            "X-XSS-Protection": "0",
            "Connection": "close",
            "Server": "Werkzeug/1.0.1 Python/3.7.0",
            "Date": "Wed, 20 May 2020 17:25:20 GMT"
        },
        "body": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n  \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n  <head>\n    <title>IndexError: list index out of range // Werkzeug Debugger</title>\n    <link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\"\n        type=\"text/css\">\n    <!-- We need to make sure this has a favicon so that the debugger does\n         not by accident trigger a request to /favicon.ico which might\n         change the application state. -->\n    <link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\">\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js\"></script>\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"></script>\n    <script type=\"text/javascript\">\n      var TRACEBACK = 76178544,\n          CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"5CssKMwSgvfOFHO2YdTs\";\n    </script>\n  </head>\n  <body style=\"background-color: #fff\">\n    <div class=\"debugger\">\n<h1>IndexError</h1>\n<div class=\"detail\">\n  <p class=\"errormsg\">IndexError: list index out of range</p>\n</div>\n<h2 class=\"traceback\">Traceback <em>(most recent call last)</em></h2>\n<div class=\"traceback\">\n  \n  <ul><li><div class=\"frame\" id=\"frame-76178672\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\"</cite>,\n      line <em class=\"line\">2464</em>,\n      in <code class=\"function\">__call__</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def __call__(self, environ, start_response):</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>return self.wsgi_app(environ, start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def __repr__(self):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-76178352\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\"</cite>,\n      line <em class=\"line\">2450</em>,\n      in <code class=\"function\">wsgi_app</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>ctx.push()</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>except Exception as e:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>error = e</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except:  # noqa: B001</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>raise</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>return response(environ, start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>finally:</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-76178480\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\"</cite>,\n      line <em class=\"line\">1867</em>,\n      in <code class=\"function\">handle_exception</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span># if we want to repropagate the exception, we can attempt to</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># raise it with the whole traceback in case we can do that</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># (the function was actually called from the except part)</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># otherwise, we just raise the error again</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>if exc_value is e:</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>reraise(exc_type, exc_value, tb)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>else:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>raise e</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>self.log_exception((exc_type, exc_value, tb))</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>server_error = InternalServerError()</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-76178800\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\_compat.py\"</cite>,\n      line <em class=\"line\">39</em>,\n      in <code class=\"function\">reraise</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">    </span>import collections.abc as collections_abc</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def reraise(tp, value, tb=None):</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>if value.__traceback__ is not tb:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>raise value.with_traceback(tb)</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>raise value</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>implements_to_string = _identity</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\"></span>else:</pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-76178896\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\"</cite>,\n      line <em class=\"line\">2447</em>,\n      in <code class=\"function\">wsgi_app</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">        </span>ctx = self.request_context(environ)</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>error = None</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>ctx.push()</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except Exception as e:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>error = e</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except:  # noqa: B001</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-76178864\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\"</cite>,\n      line <em class=\"line\">1952</em>,\n      in <code class=\"function\">full_dispatch_request</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>request_started.send(self)</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>rv = self.preprocess_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>if rv is None:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>rv = self.dispatch_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>except Exception as e:</pre>\n<pre class=\"line current\"><span class=\"ws\">            </span>rv = self.handle_user_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return self.finalize_request(rv)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def finalize_request(self, rv, from_error_handler=False):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>&quot;&quot;&quot;Given the return value from a view function this finalizes</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>the request by converting it into a response and invoking the</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-76178768\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\"</cite>,\n      line <em class=\"line\">1821</em>,\n      in <code class=\"function\">handle_user_exception</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>return self.handle_http_exception(e)</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>handler = self._find_error_handler(e)</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>if handler is None:</pre>\n<pre class=\"line current\"><span class=\"ws\">            </span>reraise(exc_type, exc_value, tb)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return handler(e)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def handle_exception(self, e):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>&quot;&quot;&quot;Handle an exception that did not have an error handler</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>associated with it, or that was raised from an error handler.</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-76178704\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\_compat.py\"</cite>,\n      line <em class=\"line\">39</em>,\n      in <code class=\"function\">reraise</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">    </span>import collections.abc as collections_abc</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def reraise(tp, value, tb=None):</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>if value.__traceback__ is not tb:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>raise value.with_traceback(tb)</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>raise value</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>implements_to_string = _identity</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\"></span>else:</pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-76178992\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\"</cite>,\n      line <em class=\"line\">1950</em>,\n      in <code class=\"function\">full_dispatch_request</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">        </span>self.try_trigger_before_first_request_functions()</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>request_started.send(self)</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>rv = self.preprocess_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>if rv is None:</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>rv = self.dispatch_request()</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>except Exception as e:</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>rv = self.handle_user_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return self.finalize_request(rv)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def finalize_request(self, rv, from_error_handler=False):</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-76178736\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\"</cite>,\n      line <em class=\"line\">1936</em>,\n      in <code class=\"function\">dispatch_request</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>and req.method == &quot;OPTIONS&quot;</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>):</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>return self.make_default_options_response()</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span># otherwise dispatch to the handler for that endpoint</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>return self.view_functions[rule.endpoint](**req.view_args)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def full_dispatch_request(self):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>pre and postprocessing as well as HTTP exception catching and</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>error handling.</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-76178448\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\edoar\\Documents\\Personal\\Projects\\toberemoved\\sts\\test_server\\app.py\"</cite>,\n      line <em class=\"line\">28</em>,\n      in <code class=\"function\">user_by_id</code></h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">    </span>}</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\"></span>@app.route('/users/&lt;int:user_id&gt;', methods=['GET'])</pre>\n<pre class=\"line before\"><span class=\"ws\"></span>def user_by_id(user_id):</pre>\n<pre class=\"line current\"><span class=\"ws\">    </span>user = list(filter(lambda x: x['id'] == user_id, get_users()))[0]</pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>return jsonify(user), 200</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\"></span>@app.route('/users', methods=['GET'])</pre>\n<pre class=\"line after\"><span class=\"ws\"></span>def users():</pre></div>\n</div>\n</ul>\n  <blockquote>IndexError: list index out of range</blockquote>\n</div>\n\n<div class=\"plain\">\n  <form action=\"/?__debugger__=yes&amp;cmd=paste\" method=\"post\">\n    <p>\n      <input type=\"hidden\" name=\"language\" value=\"pytb\">\n      This is the Copy/Paste friendly version of the traceback.  <span\n      class=\"pastemessage\">You can also paste this traceback into\n      a <a href=\"https://gist.github.com/\">gist</a>:\n      <input type=\"submit\" value=\"create paste\"></span>\n    </p>\n    <textarea cols=\"50\" rows=\"10\" name=\"code\" readonly>Traceback (most recent call last):\n  File &quot;C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py&quot;, line 2464, in __call__\n    return self.wsgi_app(environ, start_response)\n  File &quot;C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py&quot;, line 2450, in wsgi_app\n    response = self.handle_exception(e)\n  File &quot;C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py&quot;, line 1867, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File &quot;C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\_compat.py&quot;, line 39, in reraise\n    raise value\n  File &quot;C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py&quot;, line 2447, in wsgi_app\n    response = self.full_dispatch_request()\n  File &quot;C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py&quot;, line 1952, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File &quot;C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py&quot;, line 1821, in handle_user_exception\n    reraise(exc_type, exc_value, tb)\n  File &quot;C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\_compat.py&quot;, line 39, in reraise\n    raise value\n  File &quot;C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py&quot;, line 1950, in full_dispatch_request\n    rv = self.dispatch_request()\n  File &quot;C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py&quot;, line 1936, in dispatch_request\n    return self.view_functions[rule.endpoint](**req.view_args)\n  File &quot;C:\\Users\\edoar\\Documents\\Personal\\Projects\\toberemoved\\sts\\test_server\\app.py&quot;, line 28, in user_by_id\n    user = list(filter(lambda x: x['id'] == user_id, get_users()))[0]\nIndexError: list index out of range</textarea>\n  </form>\n</div>\n<div class=\"explanation\">\n  The debugger caught an exception in your WSGI application.  You can now\n  look at the traceback which led to the error.  <span class=\"nojavascript\">\n  If you enable JavaScript you can also use additional features such as code\n  execution (if the evalex feature is enabled), automatic pasting of the\n  exceptions and much more.</span>\n</div>\n      <div class=\"footer\">\n        Brought to you by <strong class=\"arthur\">DON'T PANIC</strong>, your\n        friendly Werkzeug powered traceback interpreter.\n      </div>\n    </div>\n\n    <div class=\"pin-prompt\">\n      <div class=\"inner\">\n        <h3>Console Locked</h3>\n        <p>\n          The console is locked and needs to be unlocked by entering the PIN.\n          You can find the PIN printed out on the standard output of your\n          shell that runs the server.\n        <form>\n          <p>PIN:\n            <input type=text name=pin size=14>\n            <input type=submit name=btn value=\"Confirm Pin\">\n        </form>\n      </div>\n    </div>\n  </body>\n</html>\n\n<!--\n\nTraceback (most recent call last):\n  File \"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\", line 2464, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\", line 2450, in wsgi_app\n    response = self.handle_exception(e)\n  File \"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\", line 1867, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File \"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\_compat.py\", line 39, in reraise\n    raise value\n  File \"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\", line 2447, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\", line 1952, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\", line 1821, in handle_user_exception\n    reraise(exc_type, exc_value, tb)\n  File \"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\_compat.py\", line 39, in reraise\n    raise value\n  File \"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\", line 1950, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"C:\\Users\\edoar\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\", line 1936, in dispatch_request\n    return self.view_functions[rule.endpoint](**req.view_args)\n  File \"C:\\Users\\edoar\\Documents\\Personal\\Projects\\toberemoved\\sts\\test_server\\app.py\", line 28, in user_by_id\n    user = list(filter(lambda x: x['id'] == user_id, get_users()))[0]\nIndexError: list index out of range\n\n-->\n",
        "status": 500,
        "request": {
            "body": null,
            "headers": {
                "User-Agent": "python-requests/2.23.0",
                "Accept-Encoding": "gzip, deflate",
                "Accept": "*/*",
                "Connection": "keep-alive"
            },
            "method": "GET",
            "url": "http://localhost:5000/users/17"
        },
        "json": null
    },
    {
        "type": "ASSERT",
        "name": "Final Check",
        "description": "Final Check",
        "summary": {
            "total": 18,
            "passed": 16,
            "failed": 2
        },
        "results": [
            {
                "check": "'{{1.json.username}}' == 'marco'",
                "filled_check": "'marco' == 'marco'",
                "result": true
            },
            {
                "check": "{{2.status}} == 200",
                "filled_check": "201 == 200",
                "result": false
            },
            {
                "check": "{{2.status}} == 201",
                "filled_check": "201 == 201",
                "result": true
            },
            {
                "check": "200 <= {{2.status}} <= 300",
                "filled_check": "200 <= 201 <= 300",
                "result": true
            },
            {
                "check": "{{3.json}} == {{2.json}}",
                "filled_check": "{'email': 'another@utente.it', 'id': 17, 'name': 'uno', 'surname': 'utente', 'username': 'another'} == {'email': 'another@utente.it', 'id': 17, 'name': 'uno', 'surname': 'utente', 'username': 'another'}",
                "result": true
            },
            {
                "check": "'{{3.json.username}}' == '{{2.json.username}}'",
                "filled_check": "'another' == 'another'",
                "result": true
            },
            {
                "check": "'{{3.json.surname}}' == '{{2.json.surname}}'",
                "filled_check": "'utente' == 'utente'",
                "result": true
            },
            {
                "check": "{{4.status}} == 200",
                "filled_check": "200 == 200",
                "result": true
            },
            {
                "check": "200 <= {{4.status}} <= 300",
                "filled_check": "200 <= 200 <= 300",
                "result": true
            },
            {
                "check": "'{{4.json.surname}}' != '{{3.json.surname}}'",
                "filled_check": "'crazy surname' != 'utente'",
                "result": true
            },
            {
                "check": "'{{3.json.name}}' != '{{4.json.name}}'",
                "filled_check": "'uno' != 'due'",
                "result": true
            },
            {
                "check": "'{{4.json.surname}}' == 'crazy surname'",
                "filled_check": "'crazy surname' == 'crazy surname'",
                "result": true
            },
            {
                "check": "{{5.status}} == 200",
                "filled_check": "200 == 200",
                "result": true
            },
            {
                "check": "'{{5.json.surname}}' == 'crazy surname'",
                "filled_check": "'crazy surname' == 'crazy surname'",
                "result": true
            },
            {
                "check": "'{{5.json.name}}' == '{{4.json.name}}'",
                "filled_check": "'due' == 'due'",
                "result": true
            },
            {
                "check": "'{{5.json.name}}' != '{{3.json.name}}'",
                "filled_check": "'due' != 'uno'",
                "result": true
            },
            {
                "check": "{{6.status}} == 200",
                "filled_check": "200 == 200",
                "result": true
            },
            {
                "check": "{{7.status}} == 404",
                "filled_check": "500 == 404",
                "result": false
            }
        ]
    },
    {
        "type": "ASSERT",
        "name": "Final Check - second",
        "description": "Final Check - second",
        "summary": {
            "total": 6,
            "passed": 1,
            "failed": 5
        },
        "results": [
            {
                "check": "'{{1.json.username}}' == 'marco'",
                "filled_check": "'marco' == 'marco'",
                "result": true
            },
            {
                "check": "{{2.status}} == 'PIZZA!'",
                "filled_check": "201 == 'PIZZA!'",
                "result": false
            },
            {
                "check": "'{{5.json.surname}}' == 'this is going to fail miserably'",
                "filled_check": "'crazy surname' == 'this is going to fail miserably'",
                "result": false
            },
            {
                "check": "True == False",
                "filled_check": "True == False",
                "result": false
            },
            {
                "check": "len('{{5.json.name}}') == 7",
                "filled_check": "len('due') == 7",
                "result": false
            },
            {
                "check": "{{7.status}} == 404",
                "filled_check": "500 == 404",
                "result": false
            }
        ]
    }
]